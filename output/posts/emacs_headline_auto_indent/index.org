#+BEGIN_COMMENT
.. title: Emacs让标题自动提前
.. slug: emacs_headline_auto_indent
.. date: 2018-03-19 13:31:39 UTC+08:00
.. tags: 
.. category: 
.. link: 
.. description: 
.. type: text
#+END_COMMENT

我使用的是 ~org mode + eval~ 。


总有个比较烦的事情。比如
1. Input * First Node to input a outline
2. Escape to normal noe
3. Use o to start a new line, emacs will auto indent in this new line
4. Input * Second Node to input a new outline
这个时候我想要的效果是我再加一个空格的时候，*好应该可以自动跑到行首，因为90%的情况都是想新起一样的

好的，以此为目的，我们来修改我们的emacs吧

** 思路
   我们可以按照这个步骤实现我们的需求
- 给org-mode增加hook（为了简单起见，不理evil）。每次buffer改变的时候，判断是否需要处理
- 如果需要处理，删除行首到本行第一个不为的字符

** 实现
我们安装前面的思路来实现这个功能
#+BEGIN_SRC emacs-lisp
(defun th_headline-auto-indent(start end len)
  (if (and (eq len 0)
       (th_should-handle-headline))
      (save-excursion (th_del-space-to-asterisk))
    (message "not headline")))

(defun th_should-handle-headline()
  "是否应该处理headline的缩进, 当*(一个多多个)不在行首的时候，应该处理."
  (and
   (eq (char-syntax (preceding-char)) ?\ )
   (looking-back "^\\s +\\*\\s " nil)))

(defun th_del-space-to-asterisk()
  "从行首开始，删除至第一个不为空格的元素."
  (let ((left (progn
                (beginning-of-line)
                (point)))
        (right (progn
                 (beginning-of-line)
                 (skip-syntax-forward " ")
                 (point))))
    (delete-region left right)))

(defun th_add-headline-auto-indent-hook()
    (add-hook 'after-change-functions 'th_headline-auto-indent t t))

    (add-hook 'org-mode-hook 'th_add-headline-auto-indent-hook t)
#+END_SRC

- ~save-excursion~ 让鼠标复原
- ~char-syntax~ 将一个char的syntax code返回，返回值是一个char。而?\ 为空格char。elisp中char为一个整数值。
?\ 为空格的char。类似的还有?a为a的char。
- ~skip-syntax-forward~ 按照给出的syntax class(此处为空白)往前进。跳过所有空白（空格，换行符等）
- ~add-hook~ 第4个参数为true的话，为往参数1本地hook（如果没有就创建）中添加hook
